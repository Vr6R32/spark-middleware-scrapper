services:

  scrapper-service:
    image: michaelkey/crypto-scrapper-service:0.0.1-SNAPSHOT
    container_name: scrapper-service
    ports:
      - "9000:9000"
    environment:
      SERVER_PORT: 9000
      SPRING_PROFILES_ACTIVE: docker
      TZ: Europe/Warsaw
    volumes:
      - api-logs:/var/log/spring
    networks:
      - spring
    restart: unless-stopped

  data-service:
    image: michaelkey/crypto-data-service:0.0.1-SNAPSHOT
    container_name: data-service
    ports:
      - "9001:9001"
    environment:
      SERVER_PORT: 9001
      SPRING_PROFILES_ACTIVE: docker
      TZ: Europe/Warsaw
    volumes:
      - ./db/sqlite.db:/db/sqlite.db
      - api-logs:/var/log/spring
    networks:
      - spring
    restart: unless-stopped

  websocket-service:
    image: michaelkey/crypto-websocket-service:0.0.1-SNAPSHOT
    container_name: websocket-service
    ports:
      - "9002:9002"
    environment:
      SERVER_PORT: 9002
      SPRING_PROFILES_ACTIVE: docker
      TZ: Europe/Warsaw
    volumes:
      - api-logs:/var/log/spring
    networks:
      - spring
    restart: unless-stopped

  frontend-service:
    image: michaelkey/crypto-frontend-service:0.0.1-SNAPSHOT
    container_name: frontend-service
    ports:
      - "4200:4200"
    environment:
      SERVER_PORT: 4200
      SPRING_PROFILES_ACTIVE: docker
      TZ: Europe/Warsaw
    volumes:
      - api-logs:/var/log/spring
    networks:
      - spring
    restart: unless-stopped

  api-gateway:
    image: michaelkey/api-gateway:0.0.1-SNAPSHOT
    container_name: api-gateway
    ports:
      - "9999:9999"
    environment:
      SERVER_PORT: 9999
      SPRING_PROFILES_ACTIVE: docker
    volumes:
      - api-logs:/var/log/spring
    networks:
      - spring
    depends_on:
      - eureka-server
    restart: unless-stopped

  eureka-server:
    image: michaelkey/eureka-server:0.0.1-SNAPSHOT
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      SERVER_PORT: 8761
      SPRING_PROFILES_ACTIVE: docker
    volumes:
      - api-logs:/var/log/spring
    networks:
      - spring
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
    restart: unless-stopped

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - api-logs:/var/log/spring
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - spring
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - spring
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/datasources-config.yml:/etc/grafana/provisioning/datasources/main.yml
      - ./monitoring/grafana/dashboard-config.yml:/etc/grafana/provisioning/dashboards/main.yml
    depends_on:
      - loki
    ports:
      - "3000:3000"
    networks:
      - spring
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.48.0
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - spring
    ports:
      - "9090:9090"
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw

volumes:
  grafana-data:
  api-logs:
    driver: local
    driver_opts:
      type: none
      device: ./monitoring/api-logs
      o: bind

networks:
  spring:
    driver: bridge
